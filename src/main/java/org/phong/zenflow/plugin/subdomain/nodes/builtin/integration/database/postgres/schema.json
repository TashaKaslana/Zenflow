{
   "$schema": "http://json-schema.org/draft-07/schema#",
   "type": "object",
   "title": "PostgreSQL Node Configuration Schema",
   "properties": {
     "input": {
       "type": "object",
       "title": "Input Schema",
       "properties": {
         "host": {
           "type": "string",
           "description": "PostgreSQL server hostname or IP address",
           "default": "localhost"
         },
         "port": {
           "type": "integer",
           "description": "PostgreSQL server port",
           "default": 5432,
           "minimum": 1,
           "maximum": 65535
         },
         "database": {
           "type": "string",
           "description": "Database name to connect to"
         },
         "username": {
           "type": "string",
           "description": "Database username (injected from secrets)"
         },
         "password": {
           "type": "string",
           "description": "Database password (injected from secrets)"
         },
         "query": {
           "type": "string",
           "description": "SQL query to execute (supports parameterized queries with ? placeholders)"
         },
         "parameters": {
           "type": "array",
           "description": "Indexed parameters for parameterized queries",
           "items": {
             "type": "object",
             "properties": {
               "index": {
                 "type": "integer",
                 "description": "1-based parameter index",
                 "minimum": 1
               },
               "type": {
                 "type": "string",
                 "description": "PostgreSQL parameter type",
                 "enum": [
                   "string",
                   "int",
                   "long",
                   "boolean",
                   "numeric",
                   "date",
                   "timestamp",
                   "uuid",
                   "jsonb",
                   "array",
                   "bytea"
                 ]
               },
               "value": {
                 "description": "Parameter value (type depends on the type field)"
               }
             },
             "required": [
               "index",
               "type",
               "value"
             ]
           }
         },
         "values": {
           "type": "array",
           "description": "Simple parameter values array (types will be auto-inferred)",
           "items": {}
         },
         "batchValues": {
              "type": "array",
              "description": "Batch parameter values for multi-row inserts/updates",
              "items": {
                 "type": "array",
                 "description": "Array of values for each row",
                 "items": {}
              }
         },
         "schema": {
           "type": "string",
           "description": "Database schema name for table qualification"
         },
         "conflictColumns": {
           "type": "string",
           "description": "Column names for UPSERT conflict resolution"
         },
         "updateAction": {
           "type": "string",
           "description": "Action to take on conflict (e.g., UPDATE SET column = EXCLUDED.column)"
         },
         "timeout": {
           "type": "integer",
           "description": "Query timeout in seconds",
           "default": 30,
           "minimum": 1,
           "maximum": 3600
         },
         "maxRows": {
           "type": "integer",
           "description": "Maximum number of rows to return",
           "default": 1000,
           "minimum": 1
         }
       },
       "required": [
         "host",
         "database",
         "username",
         "password",
         "query"
       ],
       "additionalProperties": false
     },
     "output": {
       "type": "object",
       "title": "Output Schema",
       "properties": {
         "rows": {
           "type": "array",
           "description": "Query result rows",
           "items": {
             "type": "object"
           }
         },
         "rowCount": {
           "type": "integer",
           "description": "Number of rows returned or affected"
         },
         "columns": {
           "type": "array",
           "description": "Column metadata",
           "items": {
             "type": "object",
             "properties": {
               "name": {
                 "type": "string"
               },
               "type": {
                 "type": "string"
               },
               "nullable": {
                 "type": "boolean"
               }
             }
           }
         },
         "executionTime": {
           "type": "integer",
           "description": "Query execution time in milliseconds"
         },
         "queryType": {
           "type": "string",
           "description": "Type of query executed (SELECT, INSERT, UPDATE, DELETE, etc.)"
         }
       },
       "required": [
         "rows",
         "rowCount",
         "executionTime",
         "queryType"
       ]
     },
     "secrets": {
       "type": "array",
       "title": "Secrets",
       "description": "Database credentials to inject as input fields",
       "minItems": 2,
       "items": {
         "type": "object",
         "title": "Secret Definition",
         "properties": {
           "key": {
             "type": "string",
             "title": "Secret Key",
             "description": "Environment key of the secret",
             "pattern": "^[A-Z0-9_]+$",
             "minLength": 3,
             "maxLength": 64
           },
           "required": {
             "type": "boolean",
             "title": "Is Required",
             "default": true,
             "description": "Whether this secret must be provided"
           },
           "description": {
             "type": "string",
             "title": "Secret Description",
             "description": "Explanation of what this secret is used for"
           }
         },
         "required": [
           "key"
         ]
       },
       "uniqueItems": true
     }
   },
   "required": [
     "input",
     "output",
     "secrets"
   ],
   "additionalProperties": false,
   "allOf": [
     {
       "properties": {
         "secrets": {
           "contains": {
             "type": "object",
             "properties": {
               "key": {
                 "const": "DB_USERNAME"
               }
             },
             "required": [
               "key"
             ]
           }
         }
       }
     },
     {
       "properties": {
         "secrets": {
           "contains": {
             "type": "object",
             "properties": {
               "key": {
                 "const": "DB_PASSWORD"
               }
             },
             "required": [
               "key"
             ]
           }
         }
       }
     }
   ]
 }