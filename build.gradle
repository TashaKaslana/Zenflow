plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.phong'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    mockitoAgent {
        canBeConsumed = false
        canBeResolved = true
        transitive = false
    }
}

configurations.configureEach {
    exclude group: "com.vaadin.external.google", module: "android-json"
}

sourceSets {
    main {
        resources {
            srcDirs = ["src/main/resources", "src/main/java"]
            include "**/*.json", "**/*.yml", "**/*.yaml", "**/*.properties", "**/*.sql"
            exclude "**/*.java"
        }
    }
}

configurations.implementation {
    exclude group: 'commons-logging'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'
    implementation 'org.mapstruct:mapstruct:1.6.3'
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.19.1")
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.19.1")
    implementation("com.github.erosb:everit-json-schema:1.14.6")
    implementation 'com.github.jsqlparser:jsqlparser:4.9'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9"
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'com.googlecode.aviator:aviator:5.4.3'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation "com.github.ben-manes.caffeine:caffeine:3.2.2"

    //integration
    implementation("net.dv8tion:JDA:5.6.1")
    implementation 'com.google.api-client:google-api-client:2.8.1'
    implementation 'com.google.auth:google-auth-library-oauth2-http:1.38.0'
    implementation 'com.google.apis:google-api-services-drive:v3-rev20250829-2.0.0'
    implementation 'com.google.apis:google-api-services-docs:v1-rev20250325-2.0.0'
    implementation 'com.google.http-client:google-http-client-jackson2:2.0.0'

    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.h2database:h2'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

    testImplementation 'org.mockito:mockito-core'
    mockitoAgent 'org.mockito:mockito-core'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


tasks.named('test') {
    useJUnitPlatform()
    jvmArgs "-javaagent:${configurations.mockitoAgent.singleFile}"
    systemProperty "mockito.mock-maker", "inline"
}
